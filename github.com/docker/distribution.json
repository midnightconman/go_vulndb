[{"schema_version":"1.3.1","id":"GO-2021-0072","modified":"2023-06-12T18:45:41Z","published":"2021-04-14T20:04:52Z","aliases":["CVE-2017-11468","GHSA-h62f-wm92-2cmw"],"summary":"Uncontrolled resource allocation in github.com/docker/distribution","details":"Various storage methods do not impose limits on how much content is accepted from user requests, allowing a malicious user to force the caller to allocate an arbitrary amount of memory.","affected":[{"package":{"name":"github.com/docker/distribution","ecosystem":"Go"},"ranges":[{"type":"SEMVER","events":[{"introduced":"0"},{"fixed":"2.7.0-rc.0+incompatible"}]}],"ecosystem_specific":{"imports":[{"path":"github.com/docker/distribution/registry/handlers","symbols":["NewApp","blobUploadHandler.PatchBlobData","blobUploadHandler.PutBlobUploadComplete","catalogHandler.GetCatalog","copyFullPayload","imageManifestHandler.GetImageManifest","imageManifestHandler.PutImageManifest"]},{"path":"github.com/docker/distribution/registry/storage","symbols":["PurgeUploads","Walk","blobStore.Enumerate","blobStore.Get","linkedBlobStore.Enumerate","linkedBlobStore.Get","manifestStore.Enumerate","manifestStore.Get","registry.Enumerate","registry.Repositories"]}]}}],"references":[{"type":"FIX","url":"https://github.com/distribution/distribution/pull/2340"},{"type":"FIX","url":"https://github.com/distribution/distribution/commit/91c507a39abfce14b5c8541cf284330e22208c0f"},{"type":"WEB","url":"https://access.redhat.com/errata/RHSA-2017:2603"},{"type":"WEB","url":"http://lists.opensuse.org/opensuse-security-announce/2020-09/msg00047.html"}],"database_specific":{"url":"https://pkg.go.dev/vuln/GO-2021-0072"}},{"schema_version":"1.3.1","id":"GO-2022-0379","modified":"2023-06-12T18:45:41Z","published":"2022-07-29T20:00:03Z","aliases":["GHSA-qq97-vm5h-rrhg"],"summary":"Type confusion in github.com/docker/distribution","details":"Systems that rely on digest equivalence for image attestations may be vulnerable to type confusion.\n\nA maliciously crafted OCI Container Image can cause registry clients to parse the same image in two different ways without modifying the image's digest, invalidating the common pattern of relying on container image digests for equivalence.\n\nThis problem has been addressed in newer versions by improving validation in manifest unmarshalling.","affected":[{"package":{"name":"github.com/docker/distribution","ecosystem":"Go"},"ranges":[{"type":"SEMVER","events":[{"introduced":"0"},{"fixed":"2.8.0+incompatible"}]}],"ecosystem_specific":{"imports":[{"path":"github.com/docker/distribution","symbols":["UnmarshalManifest"]}]}}],"references":[{"type":"FIX","url":"https://github.com/distribution/distribution/commit/b59a6f827947f9e0e67df0cfb571046de4733586"}],"database_specific":{"url":"https://pkg.go.dev/vuln/GO-2022-0379"}}]